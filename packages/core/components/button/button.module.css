@layer components {
  .button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    border: 0;
    outline: 0;
    padding: var(--spacing-4xs) var(--spacing-2xs);
    border-radius: var(--radius-sm);
    cursor: pointer;
    background-color: transparent;
    font: inherit;
    font-size: var(--text-base);
    line-height: var(--leading-base);
    letter-spacing: var(--tracking-base);

    /* when there is a pre icon, that change the buttons baseline so using top to make sure buttons always align */
    vertical-align: top;
  }

  .button[disabled] {
    opacity: var(--opacity-disabled);
    cursor: default;
  }

  .small {
    padding: var(--spacing-5xs) var(--spacing-2xs);
  }

  .button-content {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    min-width: 1px;
  }

  .button-main-content {
    display: inline-flex;
    align-items: center;
    min-width: 1px;
    gap: var(--spacing-2xs);
  }

  /* shapes */
  .circle {
    border-radius: var(--radius-full);
    padding: var(--spacing-2xs);
  }

  /* outlined */
  .outlined {
    border: 1px solid transparent;
  }

  .text {
    padding: 0;
  }

  /* neutral */
  .neutral {
    color: var(--color-neutral-bold);
  }

  .neutral.outlined {
    border-color: var(--color-neutral-bold);
  }

  .neutral.filled {
    background-color: var(--color-neutral-strong);
    color: var(--color-neutral-strong-text);
  }

  .neutral.filled:not([disabled]):hover {
    background-color: var(--color-neutral-strong1);
  }

  .neutral.filled:not([disabled]):active {
    background-color: var(--color-neutral-strong);
  }

  .neutral.weak {
    background-color: var(--color-neutral-weak);
  }

  .neutral.weak:not([disabled]):hover,
  .neutral.outlined:not([disabled]):hover,
  .neutral.ghost:not([disabled]):hover {
    background-color: var(--color-neutral-weak1);
  }

  .neutral.weak:not([disabled]):active,
  .neutral.outlined:not([disabled]):active,
  .neutral.outlined.is-selected,
  .neutral.ghost:not([disabled]):active {
    background-color: var(--color-neutral-weak);
  }

  .neutral.text {
    color: var(--color-neutral-text);
  }

  /* brand */
  .brand {
    color: var(--color-brand-text);
  }

  .brand.outlined {
    border-color: var(--color-brand-bold);
  }

  .brand.filled {
    background-color: var(--color-brand-strong);
    color: var(--color-brand-strong-text);
  }

  .brand.filled:not([disabled]):hover {
    background-color: var(--color-brand-strong1);
  }

  .brand.filled:not([disabled]):active {
    background-color: var(--color-brand-strong);
  }

  .brand.weak {
    background-color: var(--color-brand-weak);
  }

  .brand.weak:not([disabled]):hover,
  .brand.outlined:not([disabled]):hover,
  .brand.ghost:not([disabled]):hover {
    background-color: var(--color-brand-weak1);
  }

  .brand.weak:not([disabled]):active,
  .brand.outlined:not([disabled]):active,
  .brand.outlined.is-selected,
  .brand.ghost:not([disabled]):active {
    background-color: var(--color-brand-weak);
  }

  .brand.text {
    color: var(--color-brand-text);
  }

  /* brand secondary */
  .brand-secondary {
    color: var(--color-brand-secondary-bold);
  }

  .brand-secondary.outlined {
    border-color: var(--color-brand-secondary-bold);
  }

  .brand-secondary.filled {
    background-color: var(--color-brand-secondary-strong);
    color: var(--color-brand-secondary-strong-text);
  }

  .brand-secondary.filled:not([disabled]):hover {
    background-color: var(--color-brand-secondary-strong1);
  }

  .brand-secondary.filled:not([disabled]):active {
    background-color: var(--color-brand-secondary-strong);
  }

  .brand-secondary.weak {
    background-color: var(--color-brand-secondary-weak);
  }

  .brand-secondary.weak:not([disabled]):hover,
  .brand-secondary.outlined:not([disabled]):hover,
  .brand-secondary.ghost:not([disabled]):hover {
    background-color: var(--color-brand-secondary-weak1);
  }

  .brand-secondary.weak:not([disabled]):active,
  .brand-secondary.outlined:not([disabled]):active,
  .brand-secondary.outlined.is-selected,
  .brand-secondary.ghost:not([disabled]):active {
    background-color: var(--color-brand-secondary-weak);
  }

  .brand-secondary.text {
    color: var(--color-brand-secondary-text);
  }

  /* success */
  .success {
    color: var(--color-success-bold);
  }

  .success.outlined {
    border-color: var(--color-success-bold);
  }

  .success.filled {
    background-color: var(--color-success-strong);
    color: var(--color-success-strong-text);
  }

  .success.filled:not([disabled]):hover {
    background-color: var(--color-success-strong1);
  }

  .success.filled:not([disabled]):active {
    background-color: var(--color-success-strong);
  }

  .success.weak {
    background-color: var(--color-success-weak);
  }

  .success.weak:not([disabled]):hover,
  .success.outlined:not([disabled]):hover,
  .success.ghost:not([disabled]):hover {
    background-color: var(--color-success-weak1);
  }

  .success.weak:not([disabled]):active,
  .success.outlined:not([disabled]):active,
  .success.outlined.is-selected,
  .success.ghost:not([disabled]):active {
    background-color: var(--color-success-weak);
  }

  .success.text {
    color: var(--color-success-text);
  }

  /* info */
  .info {
    color: var(--color-info-bold);
  }

  .info.outlined {
    border-color: var(--color-info-bold);
  }

  .info.filled {
    background-color: var(--color-info-strong);
    color: var(--color-info-strong-text);
  }

  .info.filled:not([disabled]):hover {
    background-color: var(--color-info-strong1);
  }

  .info.filled:not([disabled]):active {
    background-color: var(--color-info-strong);
  }

  .info.weak {
    background-color: var(--color-info-weak);
  }

  .info.weak:not([disabled]):hover,
  .info.outlined:not([disabled]):hover,
  .info.ghost:not([disabled]):hover {
    background-color: var(--color-info-weak1);
  }

  .info.weak:not([disabled]):active,
  .info.outlined:not([disabled]):active,
  .info.outlined.is-selected,
  .info.ghost:not([disabled]):active {
    background-color: var(--color-info-weak);
  }

  .info.text {
    color: var(--color-info-text);
  }

  /* warning */
  .warning {
    color: var(--color-warning-bold);
  }

  .warning.outlined {
    border-color: var(--color-warning-bold);
  }

  .warning.filled {
    background-color: var(--color-warning-strong);
    color: var(--color-warning-strong-text);
  }

  .warning.filled:not([disabled]):hover {
    background-color: var(--color-warning-strong1);
  }

  .warning.filled:not([disabled]):active {
    background-color: var(--color-warning-strong);
  }

  .warning.weak {
    background-color: var(--color-warning-weak);
  }

  .warning.weak:not([disabled]):hover,
  .warning.outlined:not([disabled]):hover,
  .warning.ghost:not([disabled]):hover {
    background-color: var(--color-warning-weak1);
  }

  .warning.weak:not([disabled]):active,
  .warning.outlined:not([disabled]):active,
  .warning.outlined.is-selected,
  .warning.ghost:not([disabled]):active {
    background-color: var(--color-warning-weak);
  }

  .warning.text {
    color: var(--color-warning-text);
  }

  /* warning high */
  .warning-high {
    color: var(--color-warning-high-bold);
  }

  .warning-high.outlined {
    border-color: var(--color-warning-high-bold);
  }

  .warning-high.filled {
    background-color: var(--color-warning-high-strong);
    color: var(--color-warning-high-strong-text);
  }

  .warning-high.filled:not([disabled]):hover {
    background-color: var(--color-warning-high-strong1);
  }

  .warning-high.filled:not([disabled]):active {
    background-color: var(--color-warning-high-strong);
  }

  .warning-high.weak {
    background-color: var(--color-warning-high-weak);
  }

  .warning-high.weak:not([disabled]):hover,
  .warning-high.outlined:not([disabled]):hover,
  .warning-high.ghost:not([disabled]):hover {
    background-color: var(--color-warning-high-weak1);
  }

  .warning-high.weak:not([disabled]):active,
  .warning-high.outlined:not([disabled]):active,
  .warning-high.outlined.is-selected,
  .warning-high.ghost:not([disabled]):active {
    background-color: var(--color-warning-high-weak);
  }

  .warning-high.text {
    color: var(--color-warning-high-text);
  }

  /* danger */
  .danger {
    color: var(--color-danger-bold);
  }

  .danger.outlined {
    border-color: var(--color-danger-bold);
  }

  .danger.filled {
    background-color: var(--color-danger-strong);
    color: var(--color-danger-strong-text);
  }

  .danger.filled:not([disabled]):hover {
    background-color: var(--color-danger-strong1);
  }

  .danger.filled:not([disabled]):active {
    background-color: var(--color-danger-strong);
  }

  .danger.weak {
    background-color: var(--color-danger-weak);
  }

  .danger.weak:not([disabled]):hover,
  .danger.outlined:not([disabled]):hover,
  .danger.ghost:not([disabled]):hover {
    background-color: var(--color-danger-weak1);
  }

  .danger.weak:not([disabled]):active,
  .danger.outlined:not([disabled]):active,
  .danger.outlined.is-selected,
  .danger.ghost:not([disabled]):active {
    background-color: var(--color-danger-weak);
  }

  .danger.text {
    color: var(--color-danger-text);
  }

  /* pre post items */
  .pre-post-item {
    display: inline-flex;
  }

  .pre-post-item.pre-item {
    margin-right: var(--spacing-4xs);
  }

  .pre-post-item.post-item {
    margin-left: var(--spacing-4xs);
  }

  .is-loading .pre-post-item {
    :global {
      animation: spin 1s linear;
      animation-iteration-count: infinite;
    }
  }

  /* group */
  .button-group {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-2xs);
  }

  /* this basically is a toggle button */
  .button-group-attached {
    gap: 0;
    border: 1px solid var(--color-neutral-bold);
    border-radius: var(--radius-lg);

    .button {
      border: 0;
    }

    /*
    * with attached buttons, is stylistically looks weird to have the border of the button have the opacity tied to
    * it so in that case, we only set the opacity of the content
    */
    .button[disabled] {
      opacity: 1;

      .button-content {
        opacity: var(--opacity-disabled);
      }
    }

    .button:not(:first-child) {
      border-left: 1px solid var(--color-neutral-bold);
    }

    .button:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    .button:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    .button:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
  }
}
